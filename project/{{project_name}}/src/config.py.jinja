from pydantic import {% if use_sqlalchemy %}PostgresDsn,{% endif %}SecretStr
from pydantic_settings import BaseSettings, SettingsConfigDict


class BotSettings(BaseSettings):
    model_config = SettingsConfigDict(env_prefix="BOT_")
    TOKEN: SecretStr

{% if use_redis %}
class RedisSettings(BaseSettings):
    model_config = SettingsConfigDict(env_prefix="REDIS_")
    DSN: str
{% endif %}

{% if use_sqlalchemy %}
class DBSettings(BaseSettings):
    model_config = SettingsConfigDict(env_prefix="DB_")
    DSN: PostgresDsn
    SCHEMA: str = "public"
{% endif %}

class Settings(BaseSettings):
    bot: BotSettings = BotSettings()
    {% if use_redis %}
    redis: RedisSettings = RedisSettings()
    {% endif %}

{% if use_sqlalchemy %}
def get_db_settings() -> DBSettings:
    return DBSettings()
{% endif %}

def get_settings() -> Settings:
    return Settings()
